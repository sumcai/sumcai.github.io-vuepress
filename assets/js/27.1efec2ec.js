(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{467:function(s,n,a){s.exports=a.p+"assets/img/1635954045960.3c91e780.png"},600:function(s,n,a){"use strict";a.r(n);var e=a(20),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"概念说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概念说明"}},[s._v("#")]),s._v(" 概念说明")]),s._v(" "),e("p",[s._v("在opengl中，VAO,VBO,VEO都是存储顶点数据的缓冲对象，解释如下：")]),s._v(" "),e("ul",[e("li",[s._v("顶点数组对象：Vertex Array Object，VAO")]),s._v(" "),e("li",[s._v("顶点缓冲对象：Vertex Buffer Object，VBO")]),s._v(" "),e("li",[s._v("索引缓冲对象：Element Buffer Object，EBO或Index Buffer Object，IBO")])]),s._v(" "),e("p",[s._v("这三个缓冲对象的关系图：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(467),alt:"1635954045960"}})]),s._v(" "),e("h3",{attrs:{id:"顶点数组对象-vao"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#顶点数组对象-vao"}},[s._v("#")]),s._v(" 顶点数组对象(VAO)")]),s._v(" "),e("p",[s._v("顶点数组对象(Vertex Array Object, VAO)可以像顶点缓冲对象那样被绑定，任何随后的顶点属性调用都会储存在这个VAO中。这样的好处就是，当配置顶点属性指针时，你只需要将那些调用执行一次，之后再绘制物体的时候只需要绑定相应的VAO就行了。这使在不同顶点数据和属性配置之间切换变得非常简单，只需要绑定不同的VAO就行了。")]),s._v(" "),e("h3",{attrs:{id:"顶点缓冲对象-vbo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#顶点缓冲对象-vbo"}},[s._v("#")]),s._v(" 顶点缓冲对象(VBO)")]),s._v(" "),e("p",[s._v("我们通过顶点缓冲对象(Vertex Buffer Objects, VBO)管理内存，它会在GPU内存(通常被称为显存)中储存大批顶点。使用这些缓冲对象的好处是我们可以一次性的发送一大批数据到显卡上，而不是每个顶点发送一次。")]),s._v(" "),e("h3",{attrs:{id:"索引缓冲对象-ebo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#索引缓冲对象-ebo"}},[s._v("#")]),s._v(" 索引缓冲对象(EBO)")]),s._v(" "),e("p",[s._v("和顶点缓冲对象一样，EBO也是一个缓冲，它专门储存索引，OpenGL调用这些顶点的索引来决定该绘制哪个顶点。")]),s._v(" "),e("h2",{attrs:{id:"三者关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三者关系"}},[s._v("#")]),s._v(" 三者关系")]),s._v(" "),e("p",[e("strong",[s._v("可以理解为VBO就是显存中的一个存储区域，可以保持大量的顶点属性信息")]),s._v("。并且可以开辟很多个VBO，每个VBO在OpenGL中有它的唯一标识ID，这个ID对应着具体的VBO的显存地址，通过这个ID可以对特定的VBO内的数据进行存取操作。")]),s._v(" "),e("p",[e("strong",[s._v("VAO是一个保存了所有顶点数据属性的状态结合，它存储了顶点数据的格式以及顶点数据所需的VBO对象的引用")]),s._v("。VAO本身并没有存储顶点的相关属性数据，这些信息是存储在VBO中的，VAO相当于是对很多个VBO的引用，把一些VBO组合在一起作为一个对象统一管理。")]),s._v(" "),e("p",[e("strong",[s._v("EBO中存储的内容就是顶点位置的索引indices，EBO跟VBO类似，也是在显存中的一块内存缓冲器")]),s._v("，只不过EBO保存的是顶点的索引。")]),s._v(" "),e("h2",{attrs:{id:"示例代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例代码"}},[s._v("#")]),s._v(" 示例代码")]),s._v(" "),e("div",{staticClass:"language-c++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const GLfloat g_vertex_buffer_data[] = {\n    -1.0f, -1.0f, 0.0f,     // 左下角\n    1.0f, -1.0f, 0.0f,      // 右下角\n    0.0f, 0.0f, 0.0f,       // 中间点\n    -1.0f, 1.0f, 0.0f,      // 左上角\n    1.0f, 1.0f, 0.0f        // 右上角\n};\n\nunsigned int indices1[] = {0, 1, 2};\nunsigned int indices2[] = {2, 3, 4};\n\n// VAO1、VBO1、EBO1的数据\nGLuint VAO1;\nGLuint VBO1;\nGLuint EBO1;\nglGenVertexArrays(1, &VAO1);\nglBindVertexArray(VAO1);\n\nglGenBuffers(1, &VBO1);\nglBindBuffer(GL_ARRAY_BUFFER, VBO1);\nglBufferData(GL_ARRAY_BUFFER, sizeof(g_vertex_buffer_data), g_vertex_buffer_data, GL_STATIC_DRAW);\n\nglGenBuffers(1, &EBO1);\nglBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO1);\nglBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices1), indices1, GL_STATIC_DRAW);\n\nglVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 0, (void*)0);\nglEnableVertexAttribArray(0);\n\n\n// VAO2、VBO2、EBO2的数据\nGLuint VAO2;\nGLuint VBO2;\nGLuint EBO2;\nglGenVertexArrays(1, &VAO2);\nglBindVertexArray(VAO2);\n\nglGenBuffers(1, &VBO2);\nglBindBuffer(GL_ARRAY_BUFFER, VBO2);\nglBufferData(GL_ARRAY_BUFFER, sizeof(g_vertex_buffer_data), g_vertex_buffer_data, GL_STATIC_DRAW);\n\nglGenBuffers(1, &EBO2);\nglBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO2);\nglBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices2), indices2, GL_STATIC_DRAW);\n\nglVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 0, (void*)0);\nglEnableVertexAttribArray(0);\n\nglClearColor( 0, 0, 0.4, 0 );\nglClear( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT );\n\n// 绑定VAO1\nglBindVertexArray(1);\nglDrawElements(GL_TRIANGLES, 3, GL_UNSIGNED_INT, 0);\n\n// 绑定VAO2\nglBindVertexArray(2);\nglDrawElements(GL_TRIANGLES, 3, GL_UNSIGNED_INT, 0);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br")])]),e("p",[s._v("上面的示例代码，首先设置好VAO1、VAO2的缓冲数据，VAO中分别绑定对应的VBO、EBO，后面在绘制前直接绑定对应的VAO即可。")]),s._v(" "),e("h2",{attrs:{id:"简单的绘制方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单的绘制方式"}},[s._v("#")]),s._v(" 简单的绘制方式")]),s._v(" "),e("p",[s._v("如果给了一组顶点信息，可使用下面的两种方式绘制，两种方式是等效的：")]),s._v(" "),e("div",{staticClass:"language-c++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const GLfloat points[] = {\n    -1.0f, -1.0f, 0.0f,     // 左下角\n    1.0f, -1.0f, 0.0f,      // 右下角\n    0.0f, 0.0f, 0.0f,       // 中间点\n};\n// 方式一\nglEnableVertexAttribArray(0);\nglVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 0, points);\nglDrawArrays(GL_TRIANGLES, 0, 3);\nglDisableVertexAttribArray(0);\n\n// 方式二\nglEnableClientState(GL_VERTEX_ARRAY);\nglVertexPointer(3, GL_FLOAT, 0, points);\nglDrawArrays(GL_TRIANGLES, 0, 3);\nglDisableClientState(GL_VERTEX_ARRAY);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);