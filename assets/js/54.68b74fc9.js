(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{630:function(e,s,t){"use strict";t.r(s);var n=t(20),a=Object(n.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"github自动同步到gitee"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github自动同步到gitee"}},[e._v("#")]),e._v(" GitHub自动同步到Gitee")]),e._v(" "),t("p",[e._v("对于广大程序员来说，github已成为每天必不可少的工具，但是在国内又难以忍受龟速，有一个不错的解决方法是使用Gitee作为桥梁，从Github导入仓库到Gitee，直接在Gitee上进行操作。今天我要介绍的是提交到Github时怎么触发代码自动同步到Gitee，这个功能主要用在Gitee Page的更新，因为Github Page是自动更新的，即博客更新了markdown文件后网站是自动更新的，而Gitee page需要手工更新才行，只有Pro版本才可以自动更新（当然是收费的），这里不得不吐槽一下国内的厂商，对于广大开发者来说，白嫖太难。")]),e._v(" "),t("p",[e._v("在多方探索后终于找到一个解决方案，使用"),t("a",{attrs:{href:"https://github.com/yanglbme/gitee-pages-action",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("gitee-pages-action"),t("OutboundLink")],1),e._v("可实现推送到Github时，自动同步更新到Gitee，这样Gitee page也会自动更新，而不用再去手动更新了。")]),e._v(" "),t("h2",{attrs:{id:"使用方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[e._v("#")]),e._v(" 使用方式")]),e._v(" "),t("p",[e._v("在你的 GitHub 仓库新建 .github/workflows/ 文件夹，并在里面创建一个 .yml 文件，如 sync.yml，内容如下：")]),e._v(" "),t("div",{staticClass:"language-ymal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("name: Sync\n\non: page_build\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Sync to Gitee\n        uses: wearerequired/git-mirror-action@master\n        env:\n          # 注意在 Settings->Secrets 配置 GITEE_RSA_PRIVATE_KEY\n          SSH_PRIVATE_KEY: ${{ secrets.GITEE_RSA_PRIVATE_KEY }}\n        with:\n          # 注意替换为你的 GitHub 源仓库地址\n          source-repo: git@github.com:doocs/advanced-java.git\n          # 注意替换为你的 Gitee 目标仓库地址\n          destination-repo: git@gitee.com:Doocs/advanced-java.git\n\n      - name: Build Gitee Pages\n        uses: yanglbme/gitee-pages-action@main\n        with:\n          # 注意替换为你的 Gitee 用户名\n          gitee-username: yanglbme\n          # 注意在 Settings->Secrets 配置 GITEE_PASSWORD\n          gitee-password: ${{ secrets.GITEE_PASSWORD }}\n          # 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错\n          gitee-repo: doocs/advanced-java\n          # 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）\n          branch: main\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br"),t("span",{staticClass:"line-number"},[e._v("30")]),t("br")])]),t("p",[e._v("按上面的注释填好对应的内容，在 GitHub 项目的 "),t("code",[e._v("Settings -> Secrets")]),e._v(" 路径下配置好 "),t("code",[e._v("GITEE_RSA_PRIVATE_KEY")]),e._v(" 以及 "),t("code",[e._v("GITEE_PASSWORD")]),e._v(" 两个密钥。其中：")]),e._v(" "),t("p",[t("code",[e._v("GITEE_RSA_PRIVATE_KEY")]),e._v(": 存放你的 id_rsa 私钥(本地 "),t("code",[e._v("cat ~/.ssh/id_rsa")]),e._v(")。"),t("br"),e._v(" "),t("code",[e._v("GITEE_PASSWORD")]),e._v(": 存放你的 Gitee 帐号的密码。")]),e._v(" "),t("p",[e._v("配置完后，提交上面的文件到Github，如果一切配置正常，会成功触发 Gitee Pages Action ，我们会在 Gitee 公众号收到一条登录通知。这是 GitHub Action 程序帮我们登录到 Gitee 官网，并为我们点击了项目的部署按钮。")]),e._v(" "),t("p",[e._v("目前使用该方式实现Github->Gitee自动同步非常便捷，除了少数时候因为Gitee登录验证无法同步外，大多数时候表现都很稳定，感谢"),t("a",{attrs:{href:"https://github.com/yanglbme",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("gitee-pages-action"),t("OutboundLink")],1),e._v(" 的开发者 yanglbme 给我们提供的便捷。")])])}),[],!1,null,null,null);s.default=a.exports}}]);